---
AWSTemplateFormatVersion: "2010-09-09"
Description: Default VPC stack for the ShakeShakeBurger Web Service
Parameters:
  ProjectName:
    Type: String
    Description: Project Name
  RegionName:
    Type: String
    Description: Region Name
  SeoulPubIp:
    Type: String
    Description: Seoul Public IP Address
    Default: 0.0.0.0/0

Mappings:
  CidrMap:
    ap-northeast-2:
      VpcCidr: 10.1.0.0/16
      PubSn1Cidr: 10.1.1.0/24
      PubSn2Cidr: 10.1.2.0/24
      PriSn3Cidr: 10.1.3.0/24
      PriSn4Cidr: 10.1.4.0/24
    sa-east-1:
      VpcCidr: 172.17.0.0/16
      PubSn1Cidr: 172.17.1.0/24
      PubSn2Cidr: 172.17.2.0/24
      WebSn3Cidr: 172.17.3.0/24
      WebSn4Cidr: 172.17.4.0/24     
  AmiMap:
    ap-northeast-2:
      Ami: ami-07d737d4d8119ad79
    sa-east-1:
      Ami: ami-07a943af5a5ec252b

Conditions:
  CreateSgIngress: !Equals [!Ref "AWS::Region", ap-northeast-2]

Resources:
#VPC 생성
  SeoulVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", VpcCidr]
      Tags:
       - Key: Name
         Value: SeoulVPC
#인터넷 게이트웨이
  SeoulIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: seoulIgw 
#vpc-igw attatch
  IgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref SeoulIgw
      VpcId: !Ref SeoulVPC
#서브넷
  SeoulPubSn1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SeoulVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PubSn1Cidr]
      MapPublicIpOnLaunch: true  # 퍼블릭 IP 자동 할당
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-Seoulpub-sn1"
  SeoulPubSn2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SeoulVPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PubSn2Cidr]
      MapPublicIpOnLaunch: true  # 퍼블릭 IP 자동 할당
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-Seoulpub-sn2"
  SeoulPriSn3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SeoulVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PriSn3Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-Seoulpri-sn3"
  SeoulPriSn4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SeoulVPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PriSn4Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-Seoulpri-sn4"
##Route table
#RouteTable12 -> 기본경로 : alb
  SeoulPubRt12:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SeoulVPC
      Tags:
      - Key: Name
        Value: SeoulPubRt12
  PubRt12Sn1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SeoulPubRt12
      SubnetId: !Ref SeoulPubSn1
  PubRt12Sn2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SeoulPubRt12
      SubnetId: !Ref SeoulPubSn2
  PubRt12DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: IgwAttachment
    Properties:
      RouteTableId: !Ref SeoulPubRt12
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SeoulIgw
#RouteTable34 -> 기본경로 : NAT Instance
  SeoulPriRt34:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SeoulVPC
      Tags:
      - Key: Name
        Value: SeoulPriRt34
  PriRt34Sn1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SeoulPriRt34
      SubnetId: !Ref SeoulPriSn3
  PriRt34Sn2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SeoulPriRt34
      SubnetId: !Ref SeoulPriSn4
  PriRt34DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: NatInstance  # NAT 인스턴스가 먼저 생성되어야 함
    Properties:
      RouteTableId: !Ref SeoulPriRt34
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance

  #NAT Instance SG
  NatInstanceSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SeoulVPC
      GroupDescription: !Sub "${AWS::Region} Nat Instance Security Group"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !FindInMap [CidrMap, !Ref "AWS::Region", VpcCidr]
      Tags:
        - Key : Name
          Value : !Sub "Seoul-nat-instance-sg"
  ###### 모든 트래픽 허용 ????
  NatInstanceSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CreateSgIngress
    Properties:
      GroupId: !GetAtt NatInstanceSg.GroupId
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: "0.0.0.0/0"
  #NAT Instance 
  NatInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [AmiMap, !Ref "AWS::Region", Ami]
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: 
            - !Ref NatInstanceSg
          SubnetId: !Ref SeoulPubSn1
      SourceDestCheck: false
      Tags:
        - Key : Name
          Value : !Sub "Seoul-nat-instance"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "p@ssw0rd" | passwd --stdin root
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
          sysctl -p /etc/sysctl.conf
          yum install -y iptables-services
          systemctl start iptables
          systemctl enable iptables
          iptables -F
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
          service iptables save

# Outputs
Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref SeoulVPC
    Export:
      Name: VpcId
  SeoulPubSn1Id:
    Description: The Public Subnet1 ID
    Value: !Ref SeoulPubSn1
    Export:
      Name: SeoulPubSn1Id
  SeoulPubSn2Id:
    Description: The Public Subnet2 ID
    Value: !Ref SeoulPubSn2
    Export:
      Name: SeoulPubSn2Id
  SeoulPriSn3Id:
    Description: The Private Subnet3 ID
    Value: !Ref SeoulPriSn3
    Export:
      Name: SeoulPriSn3Id
  SeoulPriSn4Id:
    Description: The Private Subnet4 ID
    Value: !Ref SeoulPriSn4
    Export:
      Name: SeoulPriSn4Id
  SeoulPriRt34:
    Description: SeoulPriRt34
    Value: !Ref SeoulPriRt34
    Export:
      Name: SeoulPriRt34
  NatInstance:
    Description: NatInstance
    Value: !Ref NatInstance
    Export:
      Name: NatInstance
  
...